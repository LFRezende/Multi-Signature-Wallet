{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_initialTxChecks",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "txId",
          "type": "uint256"
        }
      ],
      "name": "confirmTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "doubleOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "txId",
          "type": "uint256"
        }
      ],
      "name": "executeTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minTxChecks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "numConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerA_confirmed_TxB",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_changeOwners",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_add1_del0",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_changeNumConfirmations",
          "type": "bool"
        }
      ],
      "name": "proposeTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "txId",
          "type": "uint256"
        }
      ],
      "name": "revokeConfirmation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "txExecuted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "txHistory",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "confirmations",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "changeOwners",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "add1_del0",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "changeNumConfirmations",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xeaa20192f8f9d933e13bda87297a09c736648ad2c3a192fc3fa22325eca93804",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1998066",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xcddb98199d764d78298e56d485cb9a1a3b48d3d9554263a690e78258c56be291",
    "transactionHash": "0xeaa20192f8f9d933e13bda87297a09c736648ad2c3a192fc3fa22325eca93804",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1998066",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "0x70997970C51812dc3A010C7d01b50e0d17dc79C8"
    ],
    2
  ],
  "numDeployments": 1,
  "solcInputHash": "126b0a97f714aa693a381594e2414c1a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_initialTxChecks\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txId\",\"type\":\"uint256\"}],\"name\":\"confirmTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"doubleOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txId\",\"type\":\"uint256\"}],\"name\":\"executeTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTxChecks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"numConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerA_confirmed_TxB\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_changeOwners\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_add1_del0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_changeNumConfirmations\",\"type\":\"bool\"}],\"name\":\"proposeTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txId\",\"type\":\"uint256\"}],\"name\":\"revokeConfirmation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"txExecuted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"txHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"confirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"changeOwners\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"add1_del0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"changeNumConfirmations\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"proposeTx(address,uint256,bool,bool,bool)\":{\"notice\":\"------------------ \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiSig.sol\":\"MultiSigWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MultiSig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract MultiSigWallet {\\n    // Mappings:\\n\\n    mapping(address => bool) public doubleOwner;\\n    mapping(address => mapping(uint256 => bool)) public ownerA_confirmed_TxB;\\n    mapping(address => bool) public isOwner;\\n    mapping(uint256 => bool) public txExecuted;\\n    mapping(uint256 => uint256) public numConfirmations;\\n    mapping(address => uint256) public ownerPosition;\\n    // Tx Definition:\\n    struct Tx {\\n        address to; // To whom will the money be transfered\\n        uint256 value; // The amount it will be transfered\\n        address owner; // Who first proposed it\\n        bool executed; // If the Tx was already executed\\n        uint256 confirmations; // How many owners have confirmed it.\\n        uint256 txId; // Current tx Id.\\n        // For adding/removing owners and changing the numberOfConfirmations, we need the following:\\n        bool changeOwners; // If yes, to becomes the to be appended or to be removed owner.\\n        bool add1_del0; // If change owners, then if this is true, you wish to add. Otherwise, you remove.\\n        bool changeNumConfirmations; // Change the amount of confirmations required to execute Tx.\\n    }\\n\\n    address payable[] public owners; // Owners of the wallet\\n    uint256 public minTxChecks;\\n\\n    constructor(address payable[] memory _owners, uint256 _initialTxChecks) {\\n        // owners = _owners; - It would be ideal for gas sake, yet to ensure no invalid owners:\\n\\n        require(\\n            _owners.length >= _initialTxChecks,\\n            \\\"There are more txConfirmations required than signers!\\\"\\n        );\\n        require(\\n            _owners.length > 0,\\n            \\\"No address list has been passed to the constructor\\\"\\n        );\\n        require(_initialTxChecks >= 1, \\\"At least one owner needs to sign it!\\\");\\n\\n        for (uint256 j = 0; j < _owners.length; j++) {\\n            address payable adm = _owners[j];\\n            require(adm != address(0), \\\"Null address is invalid.\\\");\\n            require(!doubleOwner[adm], \\\"There is a double address input.\\\");\\n            doubleOwner[adm] = true; // Registration of the owner\\n            ownerPosition[adm] = owners.length;\\n            owners.push(adm);\\n            isOwner[adm] = true;\\n        }\\n\\n        minTxChecks = _initialTxChecks; // The initial txChecks is passed - at least this amount must be confirmed to execute.\\n    }\\n\\n    Tx[] public txHistory;\\n\\n    // Modifiers:\\n\\n    modifier onlyOwners() {\\n        require(isOwner[msg.sender], \\\"Not Owner - Permission Denied\\\");\\n        _;\\n    }\\n\\n    modifier notDoubleConfirms(uint256 txId) {\\n        require(\\n            !ownerA_confirmed_TxB[msg.sender][txId],\\n            \\\"This owner has already confirmed this transaction\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier txNotExecuted(uint256 txId) {\\n        require(!txExecuted[txId], \\\"This transaction was already executed\\\");\\n        _;\\n    }\\n\\n    modifier enoughConfirmations(uint256 txId) {\\n        require(\\n            numConfirmations[txId] >= minTxChecks,\\n            \\\"Not enough owners have confirmed - Tx cannot execute\\\"\\n        );\\n        _;\\n    }\\n\\n    // Functions\\n    // The transaction proposed here is so that owner can propose to pay, to add/del owner or even to change the numConf.\\n    /** AUDIT REQUIRED */\\n    // Owner is able to change Num and Add/Del Owners at the same time...\\n    // --> Essa constru\\u00e7\\u00e3o de NULL e Zero tem problemas de interse\\u00e7\\u00e3o - \\u00e9 interessante impedir dupla a\\u00e7\\u00e3o.\\n    /** ------------------ */\\n    function proposeTx(\\n        address payable _to,\\n        uint256 _value,\\n        bool _changeOwners,\\n        bool _add1_del0,\\n        bool _changeNumConfirmations\\n    ) public onlyOwners {\\n        Tx memory proposedTx = Tx({\\n            to: _to,\\n            value: _value,\\n            owner: msg.sender,\\n            executed: false,\\n            confirmations: 1,\\n            txId: txHistory.length,\\n            changeOwners: _changeOwners,\\n            add1_del0: _add1_del0,\\n            changeNumConfirmations: _changeNumConfirmations // If active, to is null, value is numConf.\\n        });\\n        // When changing numConf, we set the to address to NULL.\\n\\n        /** NEEDS SOME SIGHT ON THIS TO BE SURE */\\n        if (!_changeNumConfirmations) {\\n            require(_to != address(0), \\\"No burning nor adding phantom owners.\\\");\\n        } else {\\n            proposedTx.to = address(0);\\n            require(_value > 0, \\\"Not zero confirmations!\\\");\\n        }\\n        // When changing the Owners, we set the value to ZERO.\\n        if (!_changeOwners) {\\n            require(_value > 0, \\\"No transfer\\\");\\n        } else {\\n            proposedTx.value = 0;\\n            require(_to != address(0), \\\"Not adding phantom owners.\\\");\\n        }\\n        /** ^^^ -------------------- ^^^  */\\n        ownerA_confirmed_TxB[msg.sender][txHistory.length] = true;\\n        numConfirmations[txHistory.length] += 1;\\n        txHistory.push(proposedTx);\\n    }\\n\\n    // This function must not be confirmed again by the same address.\\n    function confirmTx(\\n        uint256 txId\\n    ) public onlyOwners notDoubleConfirms(txId) txNotExecuted(txId) {\\n        txHistory[txId].confirmations += 1;\\n        numConfirmations[txId] += 1;\\n        ownerA_confirmed_TxB[msg.sender][txId] = true;\\n    }\\n\\n    function deposit() public payable {}\\n\\n    // For withdrawing, it is the same as an usual transaction\\n\\n    function executeTx(\\n        uint256 txId\\n    )\\n        public\\n        onlyOwners\\n        txNotExecuted(txId)\\n        enoughConfirmations(txId)\\n        returns (bool)\\n    {\\n        /** Needs AUDITING STILL  */\\n        if (txHistory[txId].changeOwners) {\\n            if (txHistory[txId].add1_del0) {\\n                addOwner(txHistory[txId].to); // Pass the address we wish to append\\n            } else {\\n                removeOwner(txHistory[txId].to); // Pass the address we wish to delete\\n            }\\n            // require owners.length seja diferente sei la\\n            return true;\\n        }\\n        // If the to-be-executed tx wishes to change NumConfirmations\\n        if (txHistory[txId].changeNumConfirmations) {\\n            changeMinChecks(txHistory[txId].value);\\n        }\\n        /** -----------------  */\\n        // Transfer process\\n        address to = txHistory[txId].to;\\n        uint256 amount = txHistory[txId].value;\\n        (bool success, ) = to.call{value: amount}(\\\"\\\");\\n\\n        // Neutralizing tx:\\n        txHistory[txId].executed = true;\\n        txExecuted[txId] = true;\\n\\n        return success;\\n    }\\n\\n    function revokeConfirmation(\\n        uint256 txId\\n    ) public onlyOwners txNotExecuted(txId) {\\n        require(\\n            ownerA_confirmed_TxB[msg.sender][txId],\\n            \\\"This owner did not confirm this transaction previously\\\"\\n        );\\n        txHistory[txId].confirmations -= 1;\\n        ownerA_confirmed_TxB[msg.sender][txId] = false;\\n    }\\n\\n    // Functions only to be called by the own contract, in midst other functions.\\n    // We wish to take advantage of the system of transactions we have in place.\\n    // These functions are the sole reason of some of parameters of a transaction.\\n\\n    // We do not use onlyOwners modifier since only the contract calls this function.\\n    /** Needs AUDITING STILL  */\\n    function addOwner(address _newOwner) internal {\\n        ownerPosition[_newOwner] = owners.length; // Map the position of the new owner.\\n        owners.push(payable(_newOwner)); // Append new address into the list\\n    }\\n\\n    /** ---------------------- */\\n    // This here below will be tricky....\\n    /** Needs AUDITING STILL  */\\n    function removeOwner(address _oldOwner) internal {\\n        //uint256 index = ownerPosition[_oldOwner];\\n        for (uint256 j = ownerPosition[_oldOwner]; j < owners.length - 1; j++) {\\n            owners[j] = owners[j + 1];\\n            ownerPosition[owners[j]] = j; // Update on position for the owner.\\n        }\\n        owners.pop();\\n    }\\n\\n    /** ---------------------- */\\n    function changeMinChecks(uint256 _newNumberOfConfirmations) internal {\\n        minTxChecks = _newNumberOfConfirmations;\\n    }\\n\\n    // function valueToNumConfirmations() internal onlyOwners {}\\n\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xd85a5ed5fa9e279bf3355ea1736ed419cada6184003dab1b61737ff6b14c451d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "proposeTx(address,uint256,bool,bool,bool)": {
        "notice": "------------------ "
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/MultiSig.sol:MultiSigWallet",
        "label": "doubleOwner",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 11,
        "contract": "contracts/MultiSig.sol:MultiSigWallet",
        "label": "ownerA_confirmed_TxB",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 15,
        "contract": "contracts/MultiSig.sol:MultiSigWallet",
        "label": "isOwner",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 19,
        "contract": "contracts/MultiSig.sol:MultiSigWallet",
        "label": "txExecuted",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 23,
        "contract": "contracts/MultiSig.sol:MultiSigWallet",
        "label": "numConfirmations",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 27,
        "contract": "contracts/MultiSig.sol:MultiSigWallet",
        "label": "ownerPosition",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 49,
        "contract": "contracts/MultiSig.sol:MultiSigWallet",
        "label": "owners",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_address_payable)dyn_storage"
      },
      {
        "astId": 51,
        "contract": "contracts/MultiSig.sol:MultiSigWallet",
        "label": "minTxChecks",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 153,
        "contract": "contracts/MultiSig.sol:MultiSigWallet",
        "label": "txHistory",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_struct(Tx)46_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address_payable)dyn_storage": {
        "base": "t_address_payable",
        "encoding": "dynamic_array",
        "label": "address payable[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Tx)46_storage)dyn_storage": {
        "base": "t_struct(Tx)46_storage",
        "encoding": "dynamic_array",
        "label": "struct MultiSigWallet.Tx[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Tx)46_storage": {
        "encoding": "inplace",
        "label": "struct MultiSigWallet.Tx",
        "members": [
          {
            "astId": 29,
            "contract": "contracts/MultiSig.sol:MultiSigWallet",
            "label": "to",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 31,
            "contract": "contracts/MultiSig.sol:MultiSigWallet",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 33,
            "contract": "contracts/MultiSig.sol:MultiSigWallet",
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 35,
            "contract": "contracts/MultiSig.sol:MultiSigWallet",
            "label": "executed",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 37,
            "contract": "contracts/MultiSig.sol:MultiSigWallet",
            "label": "confirmations",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 39,
            "contract": "contracts/MultiSig.sol:MultiSigWallet",
            "label": "txId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 41,
            "contract": "contracts/MultiSig.sol:MultiSigWallet",
            "label": "changeOwners",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 43,
            "contract": "contracts/MultiSig.sol:MultiSigWallet",
            "label": "add1_del0",
            "offset": 1,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 45,
            "contract": "contracts/MultiSig.sol:MultiSigWallet",
            "label": "changeNumConfirmations",
            "offset": 2,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}